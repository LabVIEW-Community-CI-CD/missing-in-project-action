---
x-upstream-ref: &ref 204c21874646c6571fceb3adf69e35cc939d61f7
name: "Missing In Project (pinned)"
description: >
  Wrapper around ni/labview-icon-editor's `.github/actions/missing-in-project`
  that pins the underlying action to a known good commit. Upstream repository:
  https://github.com/ni/labview-icon-editor
author: "LabVIEW Community CI/CD"
branding:
  icon: search
  color: blue

inputs:
  lv-ver:
    description: "LabVIEW version (e.g. '2021')."
    required: true
  arch:
    description: "Bitness (32 or 64)."
    required: false
    default: "64"
  project-file:
    description: >
      Path to the .lvproj to inspect. Defaults to `main.lvproj`.
    required: false
    default: main.lvproj

outputs:
  passed:
    description: "True if VI reported success."
    value: ${{ steps.inner.outputs.passed }}
  missing-files:
    description: "Newline-separated list of missing files."
    value: ${{ steps.format.outputs['missing-files'] }}
  missing-files-count:
    description: "Number of missing files."
    value: ${{ steps.format.outputs['missing-files-count'] }}

runs:
  using: composite
  steps:
    - name: Validate inputs
      run: |
        set -euo pipefail
        valid_arches=(32 64)
        arch="${{ inputs.arch }}"
        if [[ ! " ${valid_arches[*]} " =~ " ${arch} " ]]; then
          echo "arch must be one of: ${valid_arches[*]}" >&2
          exit 1
        fi
        pf="${{ inputs['project-file'] }}"
        if [[ ! -f "$pf" ]]; then
          echo "project-file '$pf' not found" >&2
          exit 1
        fi
        if [[ "$pf" != *.lvproj ]]; then
          echo "project-file must end with .lvproj" >&2
          exit 1
        fi
        if [[ ! "${{ inputs['lv-ver'] }}" =~ ^[0-9]{4}$ ]]; then
          echo "lv-ver must be a four-digit year (e.g., '2021')" >&2
          exit 1
        fi
      shell: bash
    - name: Run upstream action
      id: inner
      uses: ni/labview-icon-editor/.github/actions/missing-in-project@*ref
      with:
        lv-ver: ${{ inputs.lv-ver }}
        arch: ${{ inputs.arch }}
        project-file: ${{ inputs.project-file }}
    - name: Format missing files
      id: format
      run: |
        set -euo pipefail
        missing="${{ steps.inner.outputs['missing-files'] }}"
        python3 - "$missing" >> "$GITHUB_OUTPUT" <<'PY'
        import csv, io, sys
        data = sys.argv[1].replace('\r', '')
        reader = csv.reader([data])
        files = [f for f in next(reader, []) if f]
        print('missing-files<<EOF')
        print('\n'.join(files))
        print('EOF')
        print(f'missing-files-count={len(files)}')
        PY
      shell: bash
