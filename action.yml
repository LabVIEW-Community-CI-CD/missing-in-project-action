---
name: "Missing In Project (pinned)"
description: >
  Wrapper around LabVIEW-Community-CI-CD/missing-in-project that pins
  the underlying action to a known good commit. Upstream repository:
  https://github.com/LabVIEW-Community-CI-CD/missing-in-project
author: "LabVIEW Community CI/CD"
branding:
  icon: search
  color: blue

inputs:
  lv-ver:
    description: "LabVIEW version (e.g. '2021')."
    required: true
  arch:
    description: "Bitness (32 or 64)."
    required: true
  project-file:
    description: >
      Path to the .lvproj to inspect. Defaults to `main.lvproj`.
    required: false
    default: main.lvproj

outputs:
  passed:
    description: "True if VI reported success."
    value: ${{ steps.inner.outputs.passed }}
  missing-files:
    description: "Newline-separated list of missing files."
    value: ${{ steps.format.outputs['missing-files'] }}

runs:
  using: composite
  steps:
    - run: |
        if [[ "${{ inputs.arch }}" != "32" && \
              "${{ inputs.arch }}" != "64" ]]; then
          echo "arch must be 32 or 64" >&2
          exit 1
        fi
        # Ensure the specified project file exists
        if [[ ! -f "${{ inputs['project-file'] }}" ]]; then
          echo "project-file '${{ inputs['project-file'] }}' not found" >&2
          exit 1
        fi
        if [[ ! "${{ inputs['lv-ver'] }}" =~ ^[0-9]{4}$ ]]; then
          echo "lv-ver must be a four-digit year (e.g., '2021')" >&2
          exit 1
        fi
      shell: bash
    - name: Run upstream action
      id: inner
      uses: LabVIEW-Community-CI-CD/missing-in-project@6ef6511c58cbf74dca00498b5e05ca5690515f48  # yamllint disable-line rule:line-length
      with:
        lv-ver: ${{ inputs.lv-ver }}
        arch: ${{ inputs.arch }}
        project-file: ${{ inputs.project-file }}
    - name: Format missing files
      id: format
      run: |
        missing_files="${{ steps.inner.outputs['missing-files'] }}"
        if [[ -n "$missing_files" ]]; then
          missing_files=$(printf '%s' "$missing_files" | tr ',' '\n')
        fi
        {
          echo 'missing-files<<EOF'
          echo "$missing_files"
          echo EOF
        } >> "$GITHUB_OUTPUT"
      shell: bash
